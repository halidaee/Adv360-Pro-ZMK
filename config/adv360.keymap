/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht_tp: ht_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
        };

        ht_tp_nr: ht_tp_nr {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TP_NR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        macro_r_assign: macro_r_assign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp LT &kp MINUS &kp SPACE>;
            label = "MACRO_R_ASSIGN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE                           &kp N1          &kp N2                &kp N3             &kp N4              &ht_tp_nr LG(LS(N5)) N5  &tog 1                                                                                                                 &mo 1            &kp N6  &kp N7        &kp N8          &kp N9          &kp N0                 &kp MINUS
&ht_tp LA(LS(LG(LCTRL))) TAB        &kp Q           &ht_tp_nr LG(W) W     &kp E              &kp R               &ht_tp_nr LG(T) T        &mo 2                                                                                                                  &mo 2            &kp Y   &kp U         &kp I           &kp O           &ht_tp_nr LS(LG(P)) P  &kp BSLH
&kp ESC                             &kp A           &ht_tp_nr LG(S) S     &kp D              &kp F               &kp G                    &kp LEFT_BRACKET  &kp LEFT_GUI                 &kp LALT              &kp RCTRL          &kp RIGHT_COMMAND              &macro_r_assign  &kp H   &kp J         &kp K           &kp L           &kp SEMI               &kp SQT
&ht_tp LEFT_SHIFT LEFT_PARENTHESIS  &ht_tp_nr LG(Z) Z  &ht_tp_nr LG(X) X  &ht_tp_nr LG(C) C  &ht_tp_nr LG(V) V   &kp B                                                                   &kp LEFT_BRACKET      &kp RIGHT_BRACKET                                                  &kp N   &kp M         &kp COMMA       &kp PERIOD      &kp SLASH              &ht_tp RIGHT_SHIFT RIGHT_PARENTHESIS
&kp LCTRL                           &kp LEFT_ALT    &kp NON_US_BACKSLASH  &kp LEFT_ARROW     &kp RIGHT_ARROW                              &kp BACKSPACE     &ht_tp LS(LA(LCTRL)) ESCAPE  &kp LG(SPACE)         &kp MINUS          &ht_tp LS(LA(LC(LGUI))) ENTER  &kp SPACE                &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACE  &kp RIGHT_BRACE        &mt LA(LS(LEFT_CONTROL)) ENTER
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &mo 0                                                                  &trans                  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                            &bootloader             &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none         &none                                             &none      &none                                           &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none                       &none                   &none       &none      &none       &bl BL_INC  &bl BL_DEC                            &rgb_ug RGB_TOG  &bl BL_TOG    &none         &none         &bl BL_TOG
            >;
        };
    };
};
